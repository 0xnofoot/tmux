#===============#
#===============#
setw -g xterm-keys on
set-option -g xterm-keys on
set -g escape-time 0
set -sg repeat-time 300
set -s focus-events on
set-option -g mouse on
# set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g set-clipboard on

set -g visual-activity off
set -g monitor-activity off
set -g monitor-bell off

set -g history-limit 10000

unbind C-b
set -g prefix 'C-s'
#===============#
#===============#

#===============#
#===============#
# 配置 nvim 的 lsp-colors 插件
set -g default-terminal "${TERM}"
set-option -g default-terminal "tmux-256color"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
#===============#
#===============#

#===============#
#===============#
# # 设置状态栏样式
set-option -g status-position bottom
set -g status-style "bg=colour234,fg=colour255"

# 设置窗口列表的样式
set -g window-status-style "bg=default,fg=colour245"
set -g window-status-current-style "bg=default,fg=colour208,bold"

# 设置状态栏左侧显示的内容
set -g status-left-length 30
set -g status-left "#[fg=colour250,bg=colour237,bold] #S #[fg=colour237,bg=colour235,nobold]"

# # 配置右侧状态栏
set -g status-interval 1
set -g status-right "#(sh ~/.config/tmux/scripts/status_right.sh)"

# # 显示窗格编号
setw -g pane-border-status top
setw -g pane-border-format "#{pane_index}"

# # 设置分隔线样式
set-option -g pane-border-style "fg=colour110,bg=default"
set-option -g pane-active-border-style "fg=colour208,bg=default"

# 设置标题栏样式
set -g set-titles on
set -g set-titles-string "tmux #T"
#===============#
#===============#

#===============#
#===============#
unbind c
unbind n
unbind p
unbind x
unbind v
unbind l
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0
#===============#
#===============#

#===============#
#===============#
set -g base-index 1

bind n new-window
bind q confirm-before "kill-window"
bind Q kill-window

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind h previous-window
bind l next-window
bind -n M-Tab last-window

bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n M-'#' join-pane -t :3
bind -n M-$ join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9
#===============#
#===============#

#===============#
#===============#
set -g pane-base-index 1

bind -n M-Q "kill-pane"
bind -n M-q confirm-before "kill-pane"

bind -n M-H split-window -hb -c "#{pane_current_path}"
bind -n M-J split-window -v -c "#{pane_current_path}"
bind -n M-K split-window -vb -c "#{pane_current_path}"
bind -n M-L split-window -h -c "#{pane_current_path}"

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -n M-. swap-pane -D
bind -n M-, swap-pane -U
bind -n M-Space next-layout

bind -n M-N resize-pane -L 3
bind -n M-M resize-pane -D 3
bind -n M-< resize-pane -U 3
bind -n M-> resize-pane -R 3

bind -n M-';' resize-pane -Z
#===============#
#===============#

#===============#
#===============#
bind -n M-v copy-mode
set -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind -T copy-mode-vi H send-keys -N 5 -X cursor-left
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi L send-keys -N 5 -X cursor-right
bind -T copy-mode-vi W send-keys -N 3 -X next-word
bind -T copy-mode-vi E send-keys -N 3 -X next-word-end
bind -T copy-mode-vi B send-keys -N 3 -X previous-word

bind -T copy-mode-vi I send-keys -X start-of-line
bind -T copy-mode-vi A send-keys -X end-of-line
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy' # pbcopy for macos

bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse
#===============#
#===============#

